{"version":3,"sources":["webpack:///../node_modules/preact/hooks/src/index.js","webpack:///./routes/home/style.css","webpack:///./data/redirect.ts","webpack:///./routes/home/index.tsx","webpack:///./lib/helper/redirector.ts"],"names":["getHookState","index","type","options","__h","currentComponent","currentHook","hooks","__H","__","length","push","__V","EMPTY","flushAfterPaintEffects","component","afterPaintEffects","shift","forEach","invokeCleanup","invokeEffect","e","__e","afterNextFrame","callback","raf","done","clearTimeout","timeout","HAS_RAF","cancelAnimationFrame","setTimeout","requestAnimationFrame","hook","comp","cleanup","__c","argsChanged","oldArgs","newArgs","some","arg","currentIndex","previousComponent","prevRaf","redirectTable","handle","target","label","value","subTarget","oldBeforeDiff","oldBeforeRender","oldAfterDiff","diffed","oldCommit","oldBeforeUnmount","unmount","vnode","hookItem","__N","_pendingArgs","c","commitQueue","filter","cb","__v","hasErrored","s","Home","args","state","url","splittedUrl","split","subHandle","match","find","ro","getTarget","getCurrentUrl","window","location","href","__s","isError","class","style"],"mappings":"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","file":"route-home.chunk.21a68.js","sourcesContent":["import { options } from 'preact';\n\n/** @type {number} */\nlet currentIndex;\n\n/** @type {import('./internal').Component} */\nlet currentComponent;\n\n/** @type {import('./internal').Component} */\nlet previousComponent;\n\n/** @type {number} */\nlet currentHook = 0;\n\n/** @type {Array<import('./internal').Component>} */\nlet afterPaintEffects = [];\n\nlet EMPTY = [];\n\nlet oldBeforeDiff = options._diff;\nlet oldBeforeRender = options._render;\nlet oldAfterDiff = options.diffed;\nlet oldCommit = options._commit;\nlet oldBeforeUnmount = options.unmount;\n\nconst RAF_TIMEOUT = 100;\nlet prevRaf;\n\noptions._diff = vnode => {\n\tcurrentComponent = null;\n\tif (oldBeforeDiff) oldBeforeDiff(vnode);\n};\n\noptions._render = vnode => {\n\tif (oldBeforeRender) oldBeforeRender(vnode);\n\n\tcurrentComponent = vnode._component;\n\tcurrentIndex = 0;\n\n\tconst hooks = currentComponent.__hooks;\n\tif (hooks) {\n\t\tif (previousComponent === currentComponent) {\n\t\t\thooks._pendingEffects = [];\n\t\t\tcurrentComponent._renderCallbacks = [];\n\t\t\thooks._list.forEach(hookItem => {\n\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t}\n\t\t\t\thookItem._pendingValue = EMPTY;\n\t\t\t\thookItem._nextValue = hookItem._pendingArgs = undefined;\n\t\t\t});\n\t\t} else {\n\t\t\thooks._pendingEffects.forEach(invokeCleanup);\n\t\t\thooks._pendingEffects.forEach(invokeEffect);\n\t\t\thooks._pendingEffects = [];\n\t\t}\n\t}\n\tpreviousComponent = currentComponent;\n};\n\noptions.diffed = vnode => {\n\tif (oldAfterDiff) oldAfterDiff(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tif (c.__hooks._pendingEffects.length) afterPaint(afterPaintEffects.push(c));\n\t\tc.__hooks._list.forEach(hookItem => {\n\t\t\tif (hookItem._pendingArgs) {\n\t\t\t\thookItem._args = hookItem._pendingArgs;\n\t\t\t}\n\t\t\tif (hookItem._pendingValue !== EMPTY) {\n\t\t\t\thookItem._value = hookItem._pendingValue;\n\t\t\t}\n\t\t\thookItem._pendingArgs = undefined;\n\t\t\thookItem._pendingValue = EMPTY;\n\t\t});\n\t}\n\tpreviousComponent = currentComponent = null;\n};\n\noptions._commit = (vnode, commitQueue) => {\n\tcommitQueue.some(component => {\n\t\ttry {\n\t\t\tcomponent._renderCallbacks.forEach(invokeCleanup);\n\t\t\tcomponent._renderCallbacks = component._renderCallbacks.filter(cb =>\n\t\t\t\tcb._value ? invokeEffect(cb) : true\n\t\t\t);\n\t\t} catch (e) {\n\t\t\tcommitQueue.some(c => {\n\t\t\t\tif (c._renderCallbacks) c._renderCallbacks = [];\n\t\t\t});\n\t\t\tcommitQueue = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t});\n\n\tif (oldCommit) oldCommit(vnode, commitQueue);\n};\n\noptions.unmount = vnode => {\n\tif (oldBeforeUnmount) oldBeforeUnmount(vnode);\n\n\tconst c = vnode._component;\n\tif (c && c.__hooks) {\n\t\tlet hasErrored;\n\t\tc.__hooks._list.forEach(s => {\n\t\t\ttry {\n\t\t\t\tinvokeCleanup(s);\n\t\t\t} catch (e) {\n\t\t\t\thasErrored = e;\n\t\t\t}\n\t\t});\n\t\tc.__hooks = undefined;\n\t\tif (hasErrored) options._catchError(hasErrored, c._vnode);\n\t}\n};\n\n/**\n * Get a hook's state from the currentComponent\n * @param {number} index The index of the hook to get\n * @param {number} type The index of the hook to get\n * @returns {any}\n */\nfunction getHookState(index, type) {\n\tif (options._hook) {\n\t\toptions._hook(currentComponent, index, currentHook || type);\n\t}\n\tcurrentHook = 0;\n\n\t// Largely inspired by:\n\t// * https://github.com/michael-klein/funcy.js/blob/f6be73468e6ec46b0ff5aa3cc4c9baf72a29025a/src/hooks/core_hooks.mjs\n\t// * https://github.com/michael-klein/funcy.js/blob/650beaa58c43c33a74820a3c98b3c7079cf2e333/src/renderer.mjs\n\t// Other implementations to look at:\n\t// * https://codesandbox.io/s/mnox05qp8\n\tconst hooks =\n\t\tcurrentComponent.__hooks ||\n\t\t(currentComponent.__hooks = {\n\t\t\t_list: [],\n\t\t\t_pendingEffects: []\n\t\t});\n\n\tif (index >= hooks._list.length) {\n\t\thooks._list.push({ _pendingValue: EMPTY });\n\t}\n\treturn hooks._list[index];\n}\n\n/**\n * @param {import('./index').StateUpdater<any>} [initialState]\n */\nexport function useState(initialState) {\n\tcurrentHook = 1;\n\treturn useReducer(invokeOrReturn, initialState);\n}\n\n/**\n * @param {import('./index').Reducer<any, any>} reducer\n * @param {import('./index').StateUpdater<any>} initialState\n * @param {(initialState: any) => void} [init]\n * @returns {[ any, (state: any) => void ]}\n */\nexport function useReducer(reducer, initialState, init) {\n\t/** @type {import('./internal').ReducerHookState} */\n\tconst hookState = getHookState(currentIndex++, 2);\n\thookState._reducer = reducer;\n\tif (!hookState._component) {\n\t\thookState._value = [\n\t\t\t!init ? invokeOrReturn(undefined, initialState) : init(initialState),\n\n\t\t\taction => {\n\t\t\t\tconst currentValue = hookState._nextValue\n\t\t\t\t\t? hookState._nextValue[0]\n\t\t\t\t\t: hookState._value[0];\n\t\t\t\tconst nextValue = hookState._reducer(currentValue, action);\n\n\t\t\t\tif (currentValue !== nextValue) {\n\t\t\t\t\thookState._nextValue = [nextValue, hookState._value[1]];\n\t\t\t\t\thookState._component.setState({});\n\t\t\t\t}\n\t\t\t}\n\t\t];\n\n\t\thookState._component = currentComponent;\n\n\t\tif (!currentComponent._hasScuFromHooks) {\n\t\t\tcurrentComponent._hasScuFromHooks = true;\n\t\t\tconst prevScu = currentComponent.shouldComponentUpdate;\n\n\t\t\t// This SCU has the purpose of bailing out after repeated updates\n\t\t\t// to stateful hooks.\n\t\t\t// we store the next value in _nextValue[0] and keep doing that for all\n\t\t\t// state setters, if we have next states and\n\t\t\t// all next states within a component end up being equal to their original state\n\t\t\t// we are safe to bail out for this specific component.\n\t\t\tcurrentComponent.shouldComponentUpdate = function(p, s, c) {\n\t\t\t\tif (!hookState._component.__hooks) return true;\n\n\t\t\t\tconst stateHooks = hookState._component.__hooks._list.filter(\n\t\t\t\t\tx => x._component\n\t\t\t\t);\n\t\t\t\tconst allHooksEmpty = stateHooks.every(x => !x._nextValue);\n\t\t\t\t// When we have no updated hooks in the component we invoke the previous SCU or\n\t\t\t\t// traverse the VDOM tree further.\n\t\t\t\tif (allHooksEmpty) {\n\t\t\t\t\treturn prevScu ? prevScu.call(this, p, s, c) : true;\n\t\t\t\t}\n\n\t\t\t\t// We check whether we have components with a nextValue set that\n\t\t\t\t// have values that aren't equal to one another this pushes\n\t\t\t\t// us to update further down the tree\n\t\t\t\tlet shouldUpdate = false;\n\t\t\t\tstateHooks.forEach(hookItem => {\n\t\t\t\t\tif (hookItem._nextValue) {\n\t\t\t\t\t\tconst currentValue = hookItem._value[0];\n\t\t\t\t\t\thookItem._value = hookItem._nextValue;\n\t\t\t\t\t\thookItem._nextValue = undefined;\n\t\t\t\t\t\tif (currentValue !== hookItem._value[0]) shouldUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\n\t\t\t\treturn shouldUpdate || hookState._component.props !== p\n\t\t\t\t\t? prevScu\n\t\t\t\t\t\t? prevScu.call(this, p, s, c)\n\t\t\t\t\t\t: true\n\t\t\t\t\t: false;\n\t\t\t};\n\t\t}\n\t}\n\n\treturn hookState._nextValue || hookState._value;\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 3);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent.__hooks._pendingEffects.push(state);\n\t}\n}\n\n/**\n * @param {import('./internal').Effect} callback\n * @param {any[]} args\n */\nexport function useLayoutEffect(callback, args) {\n\t/** @type {import('./internal').EffectHookState} */\n\tconst state = getHookState(currentIndex++, 4);\n\tif (!options._skipEffects && argsChanged(state._args, args)) {\n\t\tstate._value = callback;\n\t\tstate._pendingArgs = args;\n\n\t\tcurrentComponent._renderCallbacks.push(state);\n\t}\n}\n\nexport function useRef(initialValue) {\n\tcurrentHook = 5;\n\treturn useMemo(() => ({ current: initialValue }), []);\n}\n\n/**\n * @param {object} ref\n * @param {() => object} createHandle\n * @param {any[]} args\n */\nexport function useImperativeHandle(ref, createHandle, args) {\n\tcurrentHook = 6;\n\tuseLayoutEffect(\n\t\t() => {\n\t\t\tif (typeof ref == 'function') {\n\t\t\t\tref(createHandle());\n\t\t\t\treturn () => ref(null);\n\t\t\t} else if (ref) {\n\t\t\t\tref.current = createHandle();\n\t\t\t\treturn () => (ref.current = null);\n\t\t\t}\n\t\t},\n\t\targs == null ? args : args.concat(ref)\n\t);\n}\n\n/**\n * @param {() => any} factory\n * @param {any[]} args\n */\nexport function useMemo(factory, args) {\n\t/** @type {import('./internal').MemoHookState} */\n\tconst state = getHookState(currentIndex++, 7);\n\tif (argsChanged(state._args, args)) {\n\t\tstate._pendingValue = factory();\n\t\tstate._pendingArgs = args;\n\t\tstate._factory = factory;\n\t\treturn state._pendingValue;\n\t}\n\n\treturn state._value;\n}\n\n/**\n * @param {() => void} callback\n * @param {any[]} args\n */\nexport function useCallback(callback, args) {\n\tcurrentHook = 8;\n\treturn useMemo(() => callback, args);\n}\n\n/**\n * @param {import('./internal').PreactContext} context\n */\nexport function useContext(context) {\n\tconst provider = currentComponent.context[context._id];\n\t// We could skip this call here, but than we'd not call\n\t// `options._hook`. We need to do that in order to make\n\t// the devtools aware of this hook.\n\t/** @type {import('./internal').ContextHookState} */\n\tconst state = getHookState(currentIndex++, 9);\n\t// The devtools needs access to the context object to\n\t// be able to pull of the default value when no provider\n\t// is present in the tree.\n\tstate._context = context;\n\tif (!provider) return context._defaultValue;\n\t// This is probably not safe to convert to \"!\"\n\tif (state._value == null) {\n\t\tstate._value = true;\n\t\tprovider.sub(currentComponent);\n\t}\n\treturn provider.props.value;\n}\n\n/**\n * Display a custom label for a custom hook for the devtools panel\n * @type {<T>(value: T, cb?: (value: T) => string | number) => void}\n */\nexport function useDebugValue(value, formatter) {\n\tif (options.useDebugValue) {\n\t\toptions.useDebugValue(formatter ? formatter(value) : value);\n\t}\n}\n\n/**\n * @param {(error: any, errorInfo: import('preact').ErrorInfo) => void} cb\n */\nexport function useErrorBoundary(cb) {\n\t/** @type {import('./internal').ErrorBoundaryHookState} */\n\tconst state = getHookState(currentIndex++, 10);\n\tconst errState = useState();\n\tstate._value = cb;\n\tif (!currentComponent.componentDidCatch) {\n\t\tcurrentComponent.componentDidCatch = (err, errorInfo) => {\n\t\t\tif (state._value) state._value(err, errorInfo);\n\t\t\terrState[1](err);\n\t\t};\n\t}\n\treturn [\n\t\terrState[0],\n\t\t() => {\n\t\t\terrState[1](undefined);\n\t\t}\n\t];\n}\n\nexport function useId() {\n\tconst state = getHookState(currentIndex++, 11);\n\tif (!state._value) {\n\t\t// Grab either the root node or the nearest async boundary node.\n\t\t/** @type {import('./internal.d').VNode} */\n\t\tlet root = currentComponent._vnode;\n\t\twhile (root !== null && !root._mask && root._parent !== null) {\n\t\t\troot = root._parent;\n\t\t}\n\n\t\tlet mask = root._mask || (root._mask = [0, 0]);\n\t\tstate._value = 'P' + mask[0] + '-' + mask[1]++;\n\t}\n\n\treturn state._value;\n}\n/**\n * After paint effects consumer.\n */\nfunction flushAfterPaintEffects() {\n\tlet component;\n\twhile ((component = afterPaintEffects.shift())) {\n\t\tif (!component._parentDom || !component.__hooks) continue;\n\t\ttry {\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeCleanup);\n\t\t\tcomponent.__hooks._pendingEffects.forEach(invokeEffect);\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t} catch (e) {\n\t\t\tcomponent.__hooks._pendingEffects = [];\n\t\t\toptions._catchError(e, component._vnode);\n\t\t}\n\t}\n}\n\nlet HAS_RAF = typeof requestAnimationFrame == 'function';\n\n/**\n * Schedule a callback to be invoked after the browser has a chance to paint a new frame.\n * Do this by combining requestAnimationFrame (rAF) + setTimeout to invoke a callback after\n * the next browser frame.\n *\n * Also, schedule a timeout in parallel to the the rAF to ensure the callback is invoked\n * even if RAF doesn't fire (for example if the browser tab is not visible)\n *\n * @param {() => void} callback\n */\nfunction afterNextFrame(callback) {\n\tconst done = () => {\n\t\tclearTimeout(timeout);\n\t\tif (HAS_RAF) cancelAnimationFrame(raf);\n\t\tsetTimeout(callback);\n\t};\n\tconst timeout = setTimeout(done, RAF_TIMEOUT);\n\n\tlet raf;\n\tif (HAS_RAF) {\n\t\traf = requestAnimationFrame(done);\n\t}\n}\n\n// Note: if someone used options.debounceRendering = requestAnimationFrame,\n// then effects will ALWAYS run on the NEXT frame instead of the current one, incurring a ~16ms delay.\n// Perhaps this is not such a big deal.\n/**\n * Schedule afterPaintEffects flush after the browser paints\n * @param {number} newQueueLength\n */\nfunction afterPaint(newQueueLength) {\n\tif (newQueueLength === 1 || prevRaf !== options.requestAnimationFrame) {\n\t\tprevRaf = options.requestAnimationFrame;\n\t\t(prevRaf || afterNextFrame)(flushAfterPaintEffects);\n\t}\n}\n\n/**\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeCleanup(hook) {\n\t// A hook cleanup can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\tlet cleanup = hook._cleanup;\n\tif (typeof cleanup == 'function') {\n\t\thook._cleanup = undefined;\n\t\tcleanup();\n\t}\n\n\tcurrentComponent = comp;\n}\n\n/**\n * Invoke a Hook's effect\n * @param {import('./internal').EffectHookState} hook\n */\nfunction invokeEffect(hook) {\n\t// A hook call can introduce a call to render which creates a new root, this will call options.vnode\n\t// and move the currentComponent away.\n\tconst comp = currentComponent;\n\thook._cleanup = hook._value();\n\tcurrentComponent = comp;\n}\n\n/**\n * @param {any[]} oldArgs\n * @param {any[]} newArgs\n */\nfunction argsChanged(oldArgs, newArgs) {\n\treturn (\n\t\t!oldArgs ||\n\t\toldArgs.length !== newArgs.length ||\n\t\tnewArgs.some((arg, index) => arg !== oldArgs[index])\n\t);\n}\n\nfunction invokeOrReturn(arg, f) {\n\treturn typeof f == 'function' ? f(arg) : f;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"text\":\"text__sYL6H\",\"wrapper\":\"wrapper__fPxcn\",\"overlay\":\"overlay__rfmQF\",\"widthChange\":\"widthChange__BkVeo\",\"error\":\"error__qfBhC\",\"underline\":\"underline__3Gn+S\",\"underlineGrowAndColorChagne\":\"underlineGrowAndColorChagne__buvWV\"};","import { RedirectObject } from \"src/lib/types/redirect\";\n\nexport const redirectTable: RedirectObject[] = [\n  {\n    type: \"static\",\n    handle: \"lkd\",\n    target: {\n      label: \"linkedin.com/in/mazharz\",\n      value: \"https://www.linkedin.com/in/mazharz\",\n    },\n  },\n  {\n    type: \"static\",\n    handle: \"gr\",\n    target: {\n      label: \"goodreads.com/user/show/121886408-mazhar-zandsalimi\",\n      value: \"https://www.goodreads.com/user/show/121886408-mazhar-zandsalimi\",\n    },\n  },\n  {\n    type: \"static\",\n    handle: \"duo\",\n    target: {\n      label: \"duolingo.com/profile/m47h4r\",\n      value: \"https://www.duolingo.com/profile/m47h4r\",\n    },\n  },\n  {\n    type: \"dynamic\",\n    handle: \"gh\",\n    target: {\n      label: \"github.com/mazharz\",\n      value: \"https://www.github.com/mazharz\",\n    },\n    subTarget: {\n      label: \"github.com/mazharz\",\n      value: \"https://www.github.com/mazharz\",\n    },\n  },\n  {\n    type: \"dynamic\",\n    handle: \"blg\",\n    target: { label: \"blog.mazhar.pro\", value: \"https://blog.mazhar.pro\" },\n    subTarget: { label: \"blog.mazhar.pro\", value: \"https://blog.mazhar.pro\" },\n  },\n];\n","import { h } from \"preact\";\nimport style from \"./style.css\";\nimport { getCurrentUrl } from \"preact-router\";\nimport { getTarget } from \"../../lib/helper/redirector\";\nimport { useEffect } from \"preact/hooks\";\n\nconst Home = () => {\n  const url = getCurrentUrl();\n  const target = getTarget(url);\n\n  useEffect(() => {\n    if (!target.value) return;\n\n    window.location.href = target.value;\n  }, [target]);\n\n  const isError = target.value.length <= 0;\n\n  return (\n    <div>\n      <div class={style.wrapper}>\n        {isError ? (\n          <p class={`${style.text} ${style.error}`}>\n            Sorry! That link doesn't exist!\n          </p>\n        ) : (\n          <p class={style.text}>{target.label}</p>\n        )}\n        {!isError ? <div class={style.overlay} /> : null}\n      </div>\n      {!isError ? <div class={style.underline} /> : null}\n    </div>\n  );\n};\n\nexport default Home;\n","import { redirectTable } from \"../../data/redirect\";\nimport { Target } from \"../types/redirect\";\n\nexport const getTarget = (url: string): Target => {\n  const splittedUrl = url.split(\"/\");\n  const handle = splittedUrl[1];\n  const subHandle = splittedUrl[2];\n\n  const match = redirectTable.find((ro) => ro.handle === handle);\n\n  if (!match) return { label: \"\", value: \"\" };\n\n  if (match.type === \"static\") return match.target;\n\n  if (match.type === \"dynamic\") {\n    if (!subHandle) return match.target;\n\n    return {\n      label: `${match.subTarget.label}/${subHandle}`,\n      value: `${match.subTarget.value}/${subHandle}`,\n    };\n  }\n};\n"],"sourceRoot":""}